repositories:
  - name: grafana
    url: https://grafana.github.io/helm-charts
  - name: homelab
    url: https://parente.github.io/homelab
  - name: ingress-nginx
    url: https://kubernetes.github.io/ingress-nginx
  - name: kubernetes-incubator
    url: https://charts.helm.sh/incubator
  - name: minio
    url: https://helm.min.io/
  - name: prometheus-community
    url: https://prometheus-community.github.io/helm-charts
  - name: stable
    url: https://charts.helm.sh/stable

environments:
  default:
    values:
      - values.yaml
    secrets:
      - secrets.yaml

releases:
  # Install Cloudflare origin pull certificate to allow nginx to auth traffic coming from CF only
  - name: cf-origin-pull-cert
    namespace: ingress-nginx
    chart: kubernetes-incubator/raw
    version: 0.2.3
    atomic: true
    values:
      - resources:
          - apiVersion: v1
            kind: Secret
            metadata:
              name: cloudflare-origin-pull-certificate
            data:
              origin-pull-ca.pem: {{.Values.cloudflareOriginPullCert | b64enc}}
  # Install the wildcard origin certificate and key to encrypt traffic between Cloudflare and nginx
  - name: cf-origin-cert
    namespace: ingress-nginx
    chart: kubernetes-incubator/raw
    version: 0.2.3
    atomic: true
    values:
      - resources:
          - apiVersion: v1
            kind: Secret
            metadata:
              name: cloudflare-origin-certificate
            type: kubernetes.io/tls
            data:
              tls.crt: {{.Values.cloudflareOriginCert | b64enc}}
              tls.key: {{.Values.cloudflareOriginKey | b64enc}}
  # Overwrite the default local-path-provisioner configuration with one that retains all volumes
  - name: retained-local-path
    namespace: kube-system
    chart: kubernetes-incubator/raw
    version: 0.2.3
    atomic: true
    installed: true
    values:
      - resources:
          - apiVersion: storage.k8s.io/v1
            kind: StorageClass
            metadata:
              name: local-path
              annotations:
                storageclass.kubernetes.io/is-default-class: "true"
            provisioner: rancher.io/local-path
            volumeBindingMode: WaitForFirstConsumer
            reclaimPolicy: Retain
  # Install nginx ingress controller with the Cloudflare origin pull certificate
  - name: ingress-nginx
    namespace: ingress-nginx
    chart: ingress-nginx/ingress-nginx
    version: 3.4.0
    atomic: true
    needs:
      - ingress-nginx/cf-origin-pull-cert
      - ingress-nginx/cf-origin-cert
    values:
      - controller:
          replicaCount: 2
          extraArgs:
            default-ssl-certificate: ingress-nginx/cloudflare-origin-certificate
          extraVolumes:
            - name: cloudflare-origin-pull-certificate
              secret:
                secretName: cloudflare-origin-pull-certificate
          extraVolumeMounts:
            - name: cloudflare-origin-pull-certificate
              mountPath: /var/lib/certificates/cloudflare
          config:
            server-snippet: |
              ssl_client_certificate /var/lib/certificates/cloudflare/origin-pull-ca.pem;
              ssl_verify_client on;
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 2
              memory: 256Mi
  # Install prometheus for metrics collection
  - name: prometheus
    namespace: prometheus
    chart: prometheus-community/prometheus
    version: 13.0.0
    atomic: true
    installed: true
    values:
      - alertmanager:
          enabled: false
        nodeExporter:
          resources:
            limits:
              cpu: 100m
              memory: 16Mi
            requests:
              cpu: 100m
              memory: 8Mi
        kube-state-metrics: # https://github.com/prometheus-community/helm-charts/issues/373
          image:
            repository: ghcr.io/parente/kube-state-metrics
            tag: v1.9.7
          resources:
            requests:
              cpu: 100m
              memory: 8Mi
            limits:
              memory: 16Mi
        pushgateway:
          enabled: false
        server:
          resources:
            limits:
              memory: 512Mi
            requests:
              memory: 128Mi
  # Install grafana for metric visualization and alerting
  - name: grafana
    namespace: grafana
    chart: grafana/grafana
    version: 6.1.15
    atomic: true
    installed: true
    values:
      - adminUser: {{.Values.grafanaUser}}
        adminPassword: {{.Values.grafanaPassword}}
        persistence:
          enabled: true
          size: 2Gi
        resources:
          requests:
            memory: 128Mi
          limits:
            memory: 128Mi
        ingress:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: nginx
          hosts: ["grafana.{{ .Values.cloudflareRootDomain }}"]
          tls:
            - hosts: ["grafana.{{ .Values.cloudflareRootDomain }}"]
        datasources:
          datasources.yaml:
            apiVersion: 1
            datasources:
              - name: Prometheus
                type: prometheus
                access: proxy
                url: http://prometheus-server.prometheus.svc.cluster.local
                isDefault: true
        notifiers:
          notifiers.yaml:
            apiVersion: 1
            notifiers:
              - name: Pushover
                type: pushover
                uid: pushover_0
                is_default: true
                settings:
                  apiToken: {{.Values.grafanaPushoverAppKey}}
                  userKey: {{.Values.grafanaPushoverGroupKey}}
  # Install minio object storage service
  - name: minio
    namespace: minio
    chart: minio/minio
    version: 8.0.5
    atomic: true
    installed: true
    values:
      - accessKey: {{.Values.minioAccessKey}}
        secretKey: {{.Values.minioSecretKey}}
        mode: distributed
        replicas: 4
        environment:
          MINIO_BROWSER: on
        resources:
          requests:
            memory: 96Mi
          limits: 
            memory: 1024Gi
        persistence:
          size: 10Gi # per replica
        ingress:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: nginx
          hosts: ["minio.{{ .Values.cloudflareRootDomain }}"]
  # Create ingresses for minio static site bucket prefixes
  - name: minio-static-sites
    namespace: minio
    chart: kubernetes-incubator/raw
    version: 0.2.3
    atomic: true
    installed: true
    values:
      - resources:
          {{- range .Values.minioStaticSites}}
          - apiVersion: networking.k8s.io/v1
            kind: Ingress
            metadata:
              name: minio-{{.name}}-index
              annotations:
                kubernetes.io/ingress.class: nginx
                nginx.ingress.kubernetes.io/use-regex: "true"
                nginx.ingress.kubernetes.io/rewrite-target: {{.bucketPrefix}}/index.html
            spec:
              tls:
                - hosts: ["{{.host}}"]
              rules:
                - host: "{{.host}}"
                  http:
                    paths:
                      - path: /$
                        pathType: Prefix
                        backend:
                          service:
                            name: minio
                            port:
                              number: 9000
          - apiVersion: networking.k8s.io/v1
            kind: Ingress
            metadata:
              name: minio-{{.name}}
              annotations:
                kubernetes.io/ingress.class: nginx
                nginx.ingress.kubernetes.io/use-regex: "true"
                nginx.ingress.kubernetes.io/rewrite-target: {{.bucketPrefix}}/$1
            spec:
              tls:
                - hosts: ["{{.host}}"]
              rules:
                - host: "{{.host}}"
                  http:
                    paths:
                      - path: /(.+)$
                        pathType: Prefix
                        backend:
                          service:
                            name: minio
                            port:
                              number: 9000
          {{- end}}
  # (Optionally) Install the whoami app to test ingress
  - name: whoami
    namespace: default
    chart: homelab/whoami
    version: 0.1.0
    atomic: true
    installed: false
    values:
      - ingress:
          hosts:
            - host: "whoami.{{ .Values.cloudflareRootDomain }}"
              paths: ["/"]
          tls:
            - hosts: ["whoami.{{ .Values.cloudflareRootDomain }}"]
  # Install the cfsync app that updates Cloudflare DNS records pointing to the cluster load balancer
  # public IPv4 address
  - name: cfsync
    namespace: cfsync
    chart: homelab/cfsync
    version: 0.3.1
    atomic: true
    installed: true
    values:
      - env:
          CF_API_TOKEN: {{.Values.cloudflareApiToken}}
          CF_ZONE_ID: {{.Values.cloudflareZoneId}}
          CF_ROOT_DOMAIN: {{.Values.cloudflareRootDomain}}
        resources:
          limits:
            cpu: 100m
            memory: 16Mi
          requests:
            cpu: 100m
            memory: 8Mi
  # Install the cfcidrwatch app to monitor for Cloudflare CIDR block changes and notify via Pushover
  - name: cfcidrwatch
    namespace: default
    chart: homelab/cfcidrwatch
    version: 0.2.2
    atomic: true
    installed: true
    needs:
      - kube-system/retained-local-path
    values:
      - env:
          PUSHOVER_APP_KEY: {{.Values.pushoverAppKey}}
          PUSHOVER_GROUP_KEY: {{.Values.pushoverGroupKey}}
        resources:
          limits:
            cpu: 100m
            memory: 8Mi
          requests:
            cpu: 100m
            memory: 8Mi
  # Install the justqr web app to generate QR codes
  - name: justqr
    namespace: default
    chart: homelab/justqr
    version: 0.1.1
    atomic: true
    installed: true
    values:
      - replicaCount: 2
        resources:
          limits:
            cpu: 100m
            memory: 4Mi
          requests:
            cpu: 100m
            memory: 4Mi
        ingress:
          hosts:
            - host: "justqr.{{ .Values.cloudflareRootDomain }}"
              paths: ["/"]
          tls:
            - hosts: ["justqr.{{ .Values.cloudflareRootDomain }}"]
  - name: honey-fitness
    namespace: default
    chart: homelab/honey-fitness
    version: 0.1.0
    atomic: true
    installed: true
    values:
      - replicaCount: 2
        resources:
          limits:
            memory: 64Mi
          requests:
            memory: 16Mi
        ingress:
          hosts:
            - host: "honey.{{ .Values.cloudflareRootDomain }}"
              paths: ["/"]
          tls:
            - hosts: ["honey.{{ .Values.cloudflareRootDomain }}"]